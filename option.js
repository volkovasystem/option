!function(global,factory){if("function"==typeof define&&define.amd)define([],factory);else if("undefined"!=typeof exports)factory();else{factory(),global.option={}}}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:this,(function(){"use strict";const Option=function Option(optionData){return this instanceof Option==1?("object"==typeof optionData&&optionData instanceof Option==1?Object.defineProperty(this,"$optionData",{value:(new WeakMap).set(this,Object.assign({},optionData.$entity)),configurable:!1,enumerable:!1,writable:!1}):"object"==typeof optionData?Object.defineProperty(this,"$optionData",{value:(new WeakMap).set(this,Object.assign({},optionData)),configurable:!1,enumerable:!1,writable:!1}):void 0!==optionData?Object.defineProperty(this,"$optionData",{value:(new WeakMap).set(this,[optionData]),configurable:!1,enumerable:!1,writable:!1}):Object.defineProperty(this,"$optionData",{value:(new WeakMap).set(this,{}),configurable:!1,enumerable:!1,writable:!1}),this):new Option(optionData)};Option.prototype.set=function(property,value){return this.$optionData.get(this)[property]=value,property in this==1||Object.defineProperty(this,property,{configurable:!1,enumerable:!1,get:function(){return this.$optionData.get(this)[property]}}),this},Option.prototype.valueOf=function(){return Object.freeze(Object.assign({},this.$optionData.get(this)))},Option.prototype.toString=function(){if("function"==typeof require){const util=require("util");if("function"==typeof util.inspect)return util.inspect(this.$optionData.get(this))}return JSON.stringify(this.$optionData.get(this))},module.exports=Option}));